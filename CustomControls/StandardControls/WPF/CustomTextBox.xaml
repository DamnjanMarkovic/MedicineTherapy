<TextBox x:Class="CustomControls.CustomTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Loaded="TextBox_Loaded">

    <TextBox.Resources>

        <Style TargetType="local:CustomTextBox"  >
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <EventSetter Event="TextChanged" Handler="CustomTextBox_TextChanged"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="local:CustomTextBox">
                        <Grid x:Name="grid" >
                            <Border Name="border"                                
                                BorderBrush="{Binding BorderBrush, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                BorderThickness="{Binding BorderThickness, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"                            
                                Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}" >
                            </Border>
                            
                            <TextBlock x:Name="UserMessage"                                       
                                VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                Text = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextOnEmptyField}"
                                Padding="7,0,7,0"
                                Foreground="{Binding Path=TextColorPlaceHolder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"  
                                IsHitTestVisible="False"                                
                                Visibility="Hidden"
                                FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"  
                                HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"  
                                FontStyle="Italic"
                                TextOptions.TextFormattingMode="Ideal"
                                TextOptions.TextRenderingMode="ClearType"
                                FontWeight="Regular"
                            />
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" />                           

                        </Grid>
                        <ControlTemplate.Triggers >
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=BorderColorMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                <Setter Property="Background" TargetName="border" Value="{Binding Path=BackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                <Setter Property="TextElement.Foreground" TargetName="border" 
                                        Value="{Binding Path=TextColorMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=BorderColorMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                <Setter Property="Background" TargetName="border" 
                                        Value="{Binding Path=BackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                                <Setter Property="Background" TargetName="border" 
                                        Value="{Binding Path=BackgroundDisabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                <Setter Property="TextElement.Foreground" TargetName="UserMessage" 
                                        Value="{Binding Path=TextColorDisabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{Binding Path=BorderColorDisabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CustomTextBox}}}"/>

                            </Trigger>
                            <MultiTrigger x:Name="IsTextNilAndIsKeyboardFocusedWithin">
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="UserMessage" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            
        </Style>

    </TextBox.Resources>

</TextBox>


